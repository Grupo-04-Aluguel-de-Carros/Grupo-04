// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  CLIENT
}

model User {
  id          String    @id @unique @default(uuid())
  role        Role      @default(CLIENT)
  name        String
  surname     String
  email       String    @unique
  cpf         String    @unique
  phoneNumber String
  age         String
  password    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt()
  Address     Address[]
}

model Address {
  id           String   @id @unique @default(uuid())
  cep          String
  street       String
  city         String
  state        String
  number       String
  neighborhood String
  complement   String
  Store        Store?   @relation(fields: [storeId], references: [id], onDelete: Cascade)
  storeId      String?
  User         User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt()
}

model Store {
  id        String    @id @unique @default(uuid())
  name      String
  Address   Address[]
  Car       Car[]
  Brand     Brand[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt()
}

model Brand {
  id        String   @id @unique @default(uuid())
  name      String
  storeId   String
  Store     Store[]
  Car       Car[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Car {
  id          String   @id @unique @default(uuid())
  name        String
  model       String
  value       Int
  color       String
  year        String
  available   Boolean
  description String?
  imageUrl    String
  brandId     String?
  Brand       Brand?   @relation(fields: [brandId], references: [id])
  storeId     String?
  Store       Store?   @relation(fields: [storeId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt()
}
